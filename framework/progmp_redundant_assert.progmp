SCHEDULER dissertation_redundant;

VAR sbfCandidates = SUBFLOWS.FILTER(sbf => !sbf.THROTTLED AND 
  sbf.CWND > sbf.SKBS_IN_FLIGHT + sbf.QUEUED AND !sbf.LOSSY);

IF (!RQ.EMPTY) {
  VAR sbfCandidate = SUBFLOWS.FILTER(sbf => 
    sbf.HAS_WINDOW_FOR(RQ.TOP) AND 
    !RQ.TOP.SENT_ON(sbf)).MIN(sbf => sbf.RTT);
  IF (sbfCandidate != NULL) {
    sbfCandidate.PUSH(RQ.POP());
    RETURN;
  }
}

SET(R3, sbfCandidates.COUNT);
SET(R2, 0);

FOREACH (VAR sbf IN sbfCandidates) {
  SET(R2, R2 + 1);
  
  VAR skb = QU.FILTER(s => !s.SENT_ON(sbf)).TOP;
  /* are all QU packets sent on this sbf? */
  IF (skb != NULL) {
    sbf.PUSH(skb);
  } ELSE {
    IF (!Q.EMPTY) {
        sbf.PUSH(Q.POP());
    }
  }
}

IF (R2 != R3) {
    PRINT("WARNINGMACI: There is a difference, expected %u", R3);
    PRINT("got %u", R2);
    PRINT("New count calculation results in %u", sbfCandidates.COUNT);
}